pluginManagement {
    repositories {
        google()
        //所有二进制插件都可通过仓库查到
        //并且插件的依赖也可以通过备用重定向找到，这样就不用因为插件依赖了jcenter，就再添加jcenter。
        gradlePluginPortal()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
}

//注意plugins的位置
plugins {
    id("org.gradle.toolchains.foojay-resolver-convention") version("0.8.0")
}

//开启versionCatalogs，因为还没有正式上线，所以得打开预览
//enableFeaturePreview('VERSION_CATALOGS')
//dependencyResolutionManagement 替代的是原先在allprojects里声明repositories的功能，一样是指定所有子项目都从这些远程仓库中获取依赖。
dependencyResolutionManagement {
    //指定所有子项目都只能使用这里的远程仓库，否则就会构建失败。
    //举例来说，如果在子项目里添加了jcenter()作为repositories，构建就会失败
    //报错：Build was configured to prefer settings repositories over project repositories but repository 'BintrayJCenter' was added by build file 'app/build.gradle'
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
        //CrashTool
        maven { url "https://jitpack.io" }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
    }
    //指定toml文件目录
    versionCatalogs{
        libs{
            from(files("libs.versions.toml"))
        }
    }
}
//toolchainManagement {
//    jvm {
//        javaRepositories {
//            repository("foojay") {
//                resolverClass = org.gradle.toolchains.foojay.FoojayToolchainResolver::class.java
//            }
//            repository("made_up") {
//                resolverClass = MadeUpResolver::class.java
//                credentials {
//                    username = "user"
//                    password = "password"
//                }
//                authentication {
//                    create<DigestAuthentication>("digest")
//                }
//            }
//        }
//    }
//}

rootProject.name = "AndroidCodeStudy"
include ':app'
include ':mole:base'
//enableFeaturePreview("VERSION_CATALOGS")
include ':ksp'
